<?php

namespace common\models;

use Yii;

/**
 * This is the model class for table "subscribtion".
 *
 * @property int $id
 * @property string $name User name
 * @property string $phone User phone
 * @property string|null $email Email of user
 * @property int $author_id ID of author
 * @property string|null $created_at
 * @property string|null $updated_at
 *
 * @property User $author
 */
class Subscribtion extends \yii\db\ActiveRecord
{
    
    
    public $_authors;
    
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%subscribtion}}';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name', 'phone', 'author_id'], 'required'],
            [['author_id'], 'integer'],
            [['created_at', 'updated_at'], 'safe'],
            [['name', 'email'], 'string', 'max' => 255],
            [['phone'], 'string', 'max' => 12],
            [['author_id'], 'exist', 'skipOnError' => true, 'targetClass' => User::class, 'targetAttribute' => ['author_id' => 'id']],
            ['_authors', 'each', 'rule' => ['integer']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'User name',
            'phone' => 'User phone',
            'email' => 'Email of user',
            'author_id' => 'ID of author',
            'created_at' => 'Created At',
            'updated_at' => 'Updated At',
        ];
    }

    /**
     * Gets query for [[Author]].
     *
     * @return \yii\db\ActiveQuery|\common\models\ActiveQuery\UserQuery
     */
    public function getAuthor()
    {
        return $this->hasOne(User::class, ['id' => 'author_id']);
    }

    /**
     * {@inheritdoc}
     * @return \common\models\ActiveQuery\SubscribtionQuery the active query used by this AR class.
     */
    public static function find()
    {
        return new \common\models\ActiveQuery\SubscribtionQuery(get_called_class());
    }
    
    
    public function beforeSave($insert)
    {
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }
}
